<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-04-16T08:05:54.918Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>解决Windows Defender关闭后又自动打开的困扰（隐蔽的关闭杀软方式？）</title>
    <link href="http://example.com/2024/02/03/%E8%A7%A3%E5%86%B3Windows-Defender%E5%85%B3%E9%97%AD%E5%90%8E%E5%8F%88%E8%87%AA%E5%8A%A8%E6%89%93%E5%BC%80%E7%9A%84%E5%9B%B0%E6%89%B0/"/>
    <id>http://example.com/2024/02/03/%E8%A7%A3%E5%86%B3Windows-Defender%E5%85%B3%E9%97%AD%E5%90%8E%E5%8F%88%E8%87%AA%E5%8A%A8%E6%89%93%E5%BC%80%E7%9A%84%E5%9B%B0%E6%89%B0/</id>
    <published>2024-02-03T02:56:48.000Z</published>
    <updated>2024-04-16T08:05:54.918Z</updated>
    
    <content type="html"><![CDATA[<p>有这样一个需求，我有一台Win10系统用作服务器跑程序，但不想装杀软，可是Win10系统不装杀软的话就会自动开启Defender，之前的笔记中记载，执行如下2步可关闭Windows Defender</p><span id="more"></span><p>01 关闭篡改防护</p><p>02 修改注册表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows Defender</span><br><span class="line">New-&gt;DWORD (32-bit) Value</span><br><span class="line">DisableAntiSpyware</span><br><span class="line">1（十进制下）</span><br></pre></td></tr></table></figure><p>结果在使用中发现，过一会Windows又会将注册表改回去，这让我想到，是不是可以写一个程序来持续监测注册表，当发现Windows将它改回来后再改回去</p><h1 id="注册表操作学习"><a href="#注册表操作学习" class="headerlink" title="注册表操作学习"></a>注册表操作学习</h1><p>这里选择我比较熟悉的语言python，python操作注册表官方推荐的库是winreg，官方文档在这里：<a href="https://docs.python.org/3.8/library/winreg.html#module-winreg">https://docs.python.org/3.8/library/winreg.html#module-winreg</a>，具体函数用法官方文档写的很详细，我就不赘述了，这里主要记录下学习这些函数过程中遇到的坑</p><p>模块winreg中共包含18个操作注册表的函数，分别如下：<br>关闭键、连接注册表、创建键、删除键、删除值、枚举键、枚举值、扩展环境字符串、刷新键、载入键、打开键、查询键信息、查询值、保存键、设置值、关闭反射键、开启反射键、查询反射键</p><h2 id="注册表中的一些概念"><a href="#注册表中的一些概念" class="headerlink" title="注册表中的一些概念"></a>注册表中的一些概念</h2><p>需要先明确一下注册表中的一些概念，否则后面看文档时会混乱搞不清楚</p><p>注册表左边的通常称为键、子健 或 项、子项<br>注册表右边的通常称为值，包含：值名称、值类型、值数据<br>如下图</p><p><img src="/2024/02/03/%E8%A7%A3%E5%86%B3Windows-Defender%E5%85%B3%E9%97%AD%E5%90%8E%E5%8F%88%E8%87%AA%E5%8A%A8%E6%89%93%E5%BC%80%E7%9A%84%E5%9B%B0%E6%89%B0/01.png" alt="image"></p><h2 id="OpenKey、OpenKeyEx（打开键）"><a href="#OpenKey、OpenKeyEx（打开键）" class="headerlink" title="OpenKey、OpenKeyEx（打开键）"></a>OpenKey、OpenKeyEx（打开键）</h2><p>其中OpenKeyEx是OpenKey的扩展版本，也就是加强版本</p><p>函数原型 -&gt; winreg.OpenKeyEx(key, sub_key, reserved=0, access=KEY_READ)</p><p>官方文档中有1个坑</p><p>第4个参数的介绍是：”access is an integer that specifies an access mask that describes the desired security access for the key. Default is KEY_READ. See Access Rights for other allowed values.”，没用过这个函数的人，看到这个介绍，会觉得值应该是整数，尝试后发现不是，然后尝试 KEY_READ 发现也不是，最后经过尝试发现是winreg.KEY_ALL_ACCESS</p><p>另外需要注意，第4个参数如果设置不正确，后面写入值的时候，会报错提示权限问题，其中winreg.KEY_ALL_ACCESS是权限最大的，直接设置为它就可以</p><h2 id="SetValue、SetValueEx（设置值）"><a href="#SetValue、SetValueEx（设置值）" class="headerlink" title="SetValue、SetValueEx（设置值）"></a>SetValue、SetValueEx（设置值）</h2><p>其中SetValueEx是SetValue的扩展版本，也就是加强版本</p><p>函数原型 -&gt; winreg.SetValueEx(key, value_name, reserved, type, value)</p><p>官方文档有2个坑</p><p>第1个坑是第2个参数，介绍是：”alue_name is a string that names the subkey with which the value is associated.”，翻译过来这个参数应该是子健的名字，但其实它应该是值名称，对应上面注册表的概念</p><p>第2个坑是第4个参数，介绍是：”type is an integer that specifies the type of the data. See Value Types for the available types.”，跟OpenKeyEx中的坑类似，值不是整数，是winreg.REG_DWORD</p><p>另外，关于第4个参数，一开始我没发现怎么用的时候，用到了一个小技巧，先手动设置注册表的值，然后使用winreg.QueryValueEx读取对应的值，可获取值数据和值类型</p><h2 id="UAC问题"><a href="#UAC问题" class="headerlink" title="UAC问题"></a>UAC问题</h2><p>操作注册表需要过UAC，python中可通过库elevate请求获取UAC权限，用法很简单如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">from elevate import elevate</span><br><span class="line"></span><br><span class="line">elevate()</span><br></pre></td></tr></table></figure><p>elevate()之后的代码都是过UAC后的权限</p><h1 id="完整源码"><a href="#完整源码" class="headerlink" title="完整源码"></a>完整源码</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">import winreg</span><br><span class="line">from elevate import elevate</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">elevate()</span><br><span class="line">while True:</span><br><span class="line">    key = winreg.OpenKeyEx(winreg.HKEY_LOCAL_MACHINE, &quot;SOFTWARE\Policies\Microsoft\Windows Defender&quot;, 0, winreg.KEY_ALL_ACCESS)</span><br><span class="line">    try:</span><br><span class="line">        value, type = winreg.QueryValueEx(key, &quot;DisableAntiSpyware&quot;)</span><br><span class="line">    except:</span><br><span class="line">        print(&quot;注册表项 HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows Defender 不包含值 DisableAntiSpyware，正在添加...&quot;)</span><br><span class="line">        winreg.SetValueEx(key, &quot;DisableAntiSpyware&quot;, 0, winreg.REG_DWORD, 1)</span><br><span class="line">        print(&quot;成功添加值 DisableAntiSpyware&quot;)</span><br><span class="line">    else:</span><br><span class="line">        print(&quot;注册表项 HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows Defender 包含值 DisableAntiSpyware，且值数据为&#123;&#125;，值类型为&#123;&#125;&quot;.format(value, str(type)))</span><br><span class="line">    time.sleep(3)</span><br></pre></td></tr></table></figure><p>使用pyinstaller将上述源码打包成exe后，拷贝到目标服务器上，执行后过一会可看到Defender已经关闭，如下图</p><p><img src="/2024/02/03/%E8%A7%A3%E5%86%B3Windows-Defender%E5%85%B3%E9%97%AD%E5%90%8E%E5%8F%88%E8%87%AA%E5%8A%A8%E6%89%93%E5%BC%80%E7%9A%84%E5%9B%B0%E6%89%B0/02.png" alt="image"></p><h1 id="引申思考"><a href="#引申思考" class="headerlink" title="引申思考"></a>引申思考</h1><p>上图中可看到，Defender托盘图标没有变化，但防病毒功能已经关闭了，由此联想，是否可以作为一种隐蔽的关闭杀软的方式</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;有这样一个需求，我有一台Win10系统用作服务器跑程序，但不想装杀软，可是Win10系统不装杀软的话就会自动开启Defender，之前的笔记中记载，执行如下2步可关闭Windows Defender&lt;/p&gt;</summary>
    
    
    
    
    <category term="Problem Solving" scheme="http://example.com/tags/Problem-Solving/"/>
    
  </entry>
  
  <entry>
    <title>新征程</title>
    <link href="http://example.com/2022/01/11/%E6%96%B0%E5%BE%81%E7%A8%8B/"/>
    <id>http://example.com/2022/01/11/%E6%96%B0%E5%BE%81%E7%A8%8B/</id>
    <published>2022-01-11T11:34:25.000Z</published>
    <updated>2024-04-16T08:15:52.758Z</updated>
    
    <content type="html"><![CDATA[<p>这是博客从谷歌云搬到新家（Github Pages）的第一篇，也是2022年的第一篇，更是我从长春来到北京入职新公司后的第一篇，一段新的征程，一段新的开始</p><span id="more"></span><p>之前的博客搭建在免费的谷歌云上，不过随着谷歌云的免费到期，付费了一段时间，每月费用实在太高，只得放弃，附一张之前的博客图片</p><p>就像之前第一篇博客中写到：一个热爱黑客的家伙，这里有东西不会让你失望<br><img src="/2022/01/11/%E6%96%B0%E5%BE%81%E7%A8%8B/01.png" alt="image">  </p>]]></content>
    
    
    <summary type="html">&lt;p&gt;这是博客从谷歌云搬到新家（Github Pages）的第一篇，也是2022年的第一篇，更是我从长春来到北京入职新公司后的第一篇，一段新的征程，一段新的开始&lt;/p&gt;</summary>
    
    
    
    
    <category term="往事如烟" scheme="http://example.com/tags/%E5%BE%80%E4%BA%8B%E5%A6%82%E7%83%9F/"/>
    
  </entry>
  
</feed>
